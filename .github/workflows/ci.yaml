name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:14
        env:
          POSTGRES_DB: ns_umbrella
          POSTGRES_PASSWORD: postgres
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      MIX_ENV: test

    steps:
      - uses: actions/checkout@v3

      - uses: erlef/setup-beam@v1
        id: setup-beam
        with:
          version-file: .tool-versions
          version-type: strict

      - uses: actions/cache@v3
        with:
          path: |
            deps
            _build
            priv/plts
          key: ${{ runner.os }}-mix-${{ steps.setup-beam.outputs.otp-version }}-${{ steps.setup-beam.outputs.elixir-version }}-${{ hashFiles(format('{0}/mix.lock', github.workspace)) }}

      - uses: actions/setup-node@v3
        with:
          node-version-file: .tool-versions
          cache: npm

      - run: grep -v '^\(#.*\|\s\?\)$' .env.test >> $GITHUB_ENV

      - run: make prepare
      - run: make check
      - run: make lint
      - run: make test
      - run: make build
      - run: make docker-save

      - name: Upload image
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v2
        with:
          name: docker-image
          path: website.tar

  deploy:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: ci
    if: github.event_name == 'push' &&
      (github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch')
    environment: DockerHub
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Download image
        uses: actions/download-artifact@v2
        with:
          name: docker-image
          path: .

      - name: Load image
        run: docker load --input website.tar

      - name: Add Docker tags
        run: |
          docker tag website nseguin42/website:${{ github.sha }}
          docker tag website nseguin42/website:latest

      - name: Upload to DockerHub
        run: docker push nseguin42/website --all-tags
